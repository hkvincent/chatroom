/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mychat;

import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.net.SocketException;
import java.net.UnknownHostException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Administrator
 */
public class ClientRoom extends javax.swing.JFrame {

    Socket s = null;
    DataOutputStream dos = null;
    DataInputStream dis = null;
    boolean connect;
    String name;
    reciveMessage rm = new reciveMessage();

    /**
     * Creates new form ClientRoom
     */
    public ClientRoom() {
        initComponents();
    }
//初始化數據並且獲得Socket对象

    public ClientRoom(String ip, int port, String name, ClientLogin cl) {
        try {
            this.addWindowListener(new WindowAdapter() {
                public void windowClosing(WindowEvent e) {
                    disconnect();
                    System.exit(0);
                }
            });
            initComponents();
            init();
            s = new Socket(ip, port);
            cl.flag = true;
            dos = new DataOutputStream(s.getOutputStream());
            dis = new DataInputStream(s.getInputStream());
            if (cl.busy.isSelected()) {
                dos.writeUTF(name+"'s online status :" + "is busy now");
            } else if (!cl.hidden.isSelected()) {
                dos.writeUTF(name + "'s online status :"+"talk to me");
            }
            this.name = name;
            this.setTitle(name);
            this.setVisible(true);
            new Thread(rm).start();

            connect = true;
        } catch (UnknownHostException un) {
            JOptionPane.showMessageDialog(this, "IP wrong");
            cl.flag = false;
        } catch (IOException ex) {
            Logger.getLogger(ClientRoom.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalArgumentException ix) {
            JOptionPane.showMessageDialog(this, "port out of range");
            cl.flag = false;
        }

    }

    //關閉流和用戶端的連接
    void disconnect() {
        try {
            dos.close();
            dis.close();
            s.close();
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        borad = new javax.swing.JTextArea();
        chat = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        borad.setColumns(20);
        borad.setRows(5);
        jScrollPane1.setViewportView(borad);

        chat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 213, Short.MAX_VALUE)
                    .addComponent(chat))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(chat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void chatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatActionPerformed
        String str = chat.getText();
        chat.setText("");
        try {
            dos.writeUTF(name + ": " + str);
            dos.flush();
            //dos.close();
        } catch (IOException e1) {
            e1.printStackTrace();
        }
    }//GEN-LAST:event_chatActionPerformed

    private void init() {
        borad.setEditable(false);
        this.setTitle("chat room");
        UIGov.setFrameCenter(this);
        this.setResizable(false);
    }

  private class reciveMessage implements Runnable {

        @Override
        public void run() {
            try {
                while (connect) {
                    String str;
                    str = dis.readUTF();
                    borad.setText(borad.getText() + str + "\n");
                }
            } catch (SocketException e) {
                System.out.println("I quite");
            } catch (IOException e1) {
                e1.printStackTrace();
            }
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea borad;
    private javax.swing.JTextField chat;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
